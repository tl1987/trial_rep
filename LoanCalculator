import math
import argparse

class LoanCalc:

    def parsing_arg(self):
        parser = argparse.ArgumentParser(description='Enter type of loan and parameters')
        parser.add_argument('--type', choices=['diff', 'annuity'])
        parser.add_argument('--principal', type=float)
        parser.add_argument('--periods', type=int)
        parser.add_argument('--interest', type=float)
        parser.add_argument('--payment', type=float)
        args = parser.parse_args()
        inputs = [args.type, args.principal, args.periods, args.interest, args.payment]
        if args.type == "diff":
            if args.interest == None:
                print("incorrect parameters")
                exit()
            P = args.principal
            n = args.periods
            i = args.interest
            i = i * (1 / 1200)
            Total_payment = 0
            for m in range(1, n + 1):
                Dm = (P / n) + i * (P - (P * (m - 1)) / n)
                print(f'Month {m} : payment is {math.ceil(Dm)}')
                Total_payment += math.ceil(Dm)
            overpayment = Total_payment - P
            print(f'overpayment={overpayment}')
        elif args.type == 'annuity':
            if args.interest == None:
                print("incorrect parameters")
            elif args.principal == None:
                A = args.payment
                n = args.periods
                i = args.interest
                i = i * (1 / 1200)
                P = A / ((i * math.pow(1 + i, n)) / (math.pow(1 + i, n) - 1))
                print(f'Your loan principal = {P}!')
                A = math.ceil(P * i * (math.pow(1 + i, n)) / (math.pow(1 + i, n) - 1))
                Total_payment = A * n
                Overpayment = Total_payment - P
                print(f'Overpayment={Overpayment}')
            elif args.periods == None:
                P = args.principal
                A = args.payment
                i = args.interest
                i = (i) * (1 / 1200)
                n = math.ceil(math.log(A / (A - i * P), 1 + i))
                Y = n // 12
                M = n % 12
                if Y == 0:
                    print(f'It will take {M} months to repay this loan')
                elif M == 0:
                    print(f'It will take {Y} years to repay this loan')
                elif Y != 0 and M != 0:
                    print(f'It will take {Y} years and {M} months to repay this loan!')
                Total_payment = A * n
                Overpayment = Total_payment - P
                print(f'Overpayment={Overpayment}')
            elif args.payment == None:
                P = args.principal
                n = args.periods
                i = args.interest
                i = i * (1 / 1200)
                A = math.ceil(P * i * (math.pow(1 + i, n)) / (math.pow(1 + i, n) - 1))
                print(f'Your annuity payment ={A}!')
                Total_payment = A * n
                Overpayment = Total_payment - P
                print(f'Overpayment={Overpayment}')

        elif args.type not in ("diff", "annuity"):
            print("incorrect parameters")

        elif args.type == "diff" and args.monthlypayment is not None:
            print("incorrect parameters")

        elif args.interest == None:
            print("incorrect parameters")

        elif len(inputs) < 4:
            print("incorrect parameters")


loan1 = LoanCalc()
loan1.parsing_arg()


